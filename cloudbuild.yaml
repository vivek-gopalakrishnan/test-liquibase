steps:
  # Step 1: Clone the repository
  - name: 'gcr.io/cloud-builders/git'
    args: ['clone', 'https://github.com/vivek-gopalakrishnan/test-liquibase.git']
    dir: '/workspace'

  # Step 2: Build a Docker image of the application
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/liquibase-app:latest'  # Replace 'latest' with the desired version tag
      - '.'
    dir: '/workspace/liquibase'  # Adjust the directory to the 'liquibase' directory where the Dockerfile is located

  # Step 3: Push the Docker image to Google Container Registry (GCR)
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/liquibase-app:latest'  # Replace 'latest' with the desired version tag

  # Step 4: Run Liquibase to apply database changes
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'run'
      - '--rm'
      - '-v'
      - '/workspace/liquibase:/liquibase'
      - 'liquibase/liquibase:4.9.0'
      - '--driver=org.postgresql.Driver'
      - '--url=jdbc:postgresql://34.30.179.209:5432/test-postgresql'
      - '--username=postgres'
      - '--password=Welcome@123'
      - 'update'
    dir: '/workspace/liquibase'  # Adjust the directory to the 'liquibase' directory

timeout: 1800s
substitutions:
  _BUCKET: your-bucket-name  # Replace 'your-bucket-name' with the name of your GCP Cloud Storage bucket (if required)
